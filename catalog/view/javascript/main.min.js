

let lazyLoadInstance = new LazyLoad({});
lazyLoadInstance.update();

(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], factory);
    } else if (typeof exports !== 'undefined') {
        factory(exports);
    } else {
        factory((root.dragscroll = {}));
    }
}(this, function (exports) {
    let _window = window;
    let _document = document;
    let mousemove = 'mousemove';
    let mouseup = 'mouseup';
    let mousedown = 'mousedown';
    let EventListener = 'EventListener';
    let addEventListener = 'add' + EventListener;
    let removeEventListener = 'remove' + EventListener;
    let newScrollX, newScrollY;

    let dragged = [];
    let reset = function (i, el) {
        for (i = 0; i < dragged.length;) {
            el = dragged[i++];
            el = el.container || el;
            el[removeEventListener](mousedown, el.md, 0);
            _window[removeEventListener](mouseup, el.mu, 0);
            _window[removeEventListener](mousemove, el.mm, 0);
        };

        // cloning into array since HTMLCollection is updated dynamically
        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));
        for (i = 0; i < dragged.length;) {
            (function (el, lastClientX, lastClientY, pushed, scroller, cont) {
                (cont = el.container || el)[addEventListener](
                    mousedown,
                    cont.md = function (e) {

                        if (!el.hasAttribute('nochilddrag') ||
                            _document.elementFromPoint(
                                e.pageX, e.pageY
                            ) == cont
                        ) {
                            pushed = 1;
                            lastClientX = e.clientX;
                            lastClientY = e.clientY;

                            e.preventDefault();
                        }
                    }, 0
                );

                _window[addEventListener](
                    mouseup, cont.mu = function (e) {
                        pushed = 0;

                    }, 0
                );

                _window[addEventListener](
                    mousemove,
                    cont.mm = function (e) {
                        if (pushed) {
                            if (!!e.target.closest('a')) {
                                e.target.closest('a').setAttribute('onclick', 'removeClickHandler(this); return false;');
                            }
                            (scroller = el.scroller || el).scrollLeft -=
                                newScrollX = (- lastClientX + (lastClientX = e.clientX));
                            scroller.scrollTop -=
                                newScrollY = (- lastClientY + (lastClientY = e.clientY));
                            if (el == _document.body) {
                                (scroller = _document.documentElement).scrollLeft -= newScrollX;
                                scroller.scrollTop -= newScrollY;
                            }
                        }
                    }, 0
                );
            })(dragged[i++]);
        };
    };

    if (_document.readyState == 'complete') {
        reset();
    } else {
        _window[addEventListener]('load', reset, 0);
    };
    exports.reset = reset;
}));
function removeClickHandler(element) {
    // remove click handler from self
    element.setAttribute('onclick', null);

};


const Ukrainian = {
    firstDayOfWeek: 1,
    weekdays: {
        shorthand: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
        longhand: [
            "Неділя",
            "Понеділок",
            "Вівторок",
            "Середа",
            "Четвер",
            "П'ятниця",
            "Субота",
        ],
    },
    months: {
        shorthand: [
            "Січ",
            "Лют",
            "Бер",
            "Кві",
            "Тра",
            "Чер",
            "Лип",
            "Сер",
            "Вер",
            "Жов",
            "Лис",
            "Гру",
        ],
        longhand: [
            "Січень",
            "Лютий",
            "Березень",
            "Квітень",
            "Травень",
            "Червень",
            "Липень",
            "Серпень",
            "Вересень",
            "Жовтень",
            "Листопад",
            "Грудень",
        ],
    },
    firstDayOfWeek: 1,
    ordinal: function () {
        return "";
    },
    rangeSeparator: " — ",
    weekAbbreviation: "Нед.",
    scrollTitle: "Прокрутіть для збільшення",
    toggleTitle: "Натисніть для перемикання",
    amPM: ["ДП", "ПП"],
    yearAriaLabel: "Рік",
    time_24hr: true,
}

const Russian = {
    weekdays: {
        shorthand: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
        longhand: [
            "Воскресенье",
            "Понедельник",
            "Вторник",
            "Среда",
            "Четверг",
            "Пятница",
            "Суббота",
        ],
    },
    months: {
        shorthand: [
            "Янв",
            "Фев",
            "Март",
            "Апр",
            "Май",
            "Июнь",
            "Июль",
            "Авг",
            "Сен",
            "Окт",
            "Ноя",
            "Дек",
        ],
        longhand: [
            "Январь",
            "Февраль",
            "Март",
            "Апрель",
            "Май",
            "Июнь",
            "Июль",
            "Август",
            "Сентябрь",
            "Октябрь",
            "Ноябрь",
            "Декабрь",
        ],
    },
    firstDayOfWeek: 1,
    ordinal: function () {
        return "";
    },
    rangeSeparator: " — ",
    weekAbbreviation: "Нед.",
    scrollTitle: "Прокрутите для увеличения",
    toggleTitle: "Нажмите для переключения",
    amPM: ["ДП", "ПП"],
    yearAriaLabel: "Год",
    time_24hr: true,
}

const English = {
    weekdays: {
        shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        longhand: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
        ],
    },
    months: {
        shorthand: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
        ],
        longhand: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
        ],
    },
    firstDayOfWeek: 1,
    ordinal: function () {
        return "";
    },
    rangeSeparator: " to ",
    weekAbbreviation: "Wk",
    scrollTitle: "Scroll to increment",
    toggleTitle: "Click to toggle",
    amPM: ["AM", "PM"],
    yearAriaLabel: "Year",
    time_24hr: true,
};

const patternEmail = /^((([0-9A-Za-z]{1}[-0-9A-z\.]{0,30}[0-9A-Za-z]?)|([0-9А-Яа-я]{1}[-0-9А-я\.]{0,30}[0-9А-Яа-я]?))@([-A-Za-z]{1,}\.){1,}[-A-Za-z]{2,})$/,
    patternPhone = /^[0-9\(\)\+\-]{17,17}$/,
    patternName = /^(([a-zA-Zа-яА-Я_\-]{2,20})|((([a-zA-Zа-яА-Я_\-]{2,20})\s([a-zA-Zа-яА-Я_\-]{2,20}))))$/,
    patternText = /^[0-9a-zA-Zа-яА-Я_,.!?\s\(\)\-\@\#\%\*]+$/,
    patternFile = /\.(pdf|doc|docx)$/i,
    patternPassword = /^[0-9a-zA-Zа_!#\-]{6,30}$/,
    patternDate = /^[0-9_.,:\s\-]{16,16}$/,
    patternNumber = /[0-9]$/;
document.addEventListener('DOMContentLoaded', function () {

    if (!!document.querySelector('.tiny-slider')) {
        tns({
            container: '.tiny-slider',
            items: 1,
            slideBy: 'page',
            mouseDrag: true,
            controls: false,
            autoplayButtonOutput: false,
            preventScrollOnTouch: 'auto',
            lazyload: true,
            lazyloadSelector: ".tns-lazy",
            responsive: {
                769: {
                    gutter: 100,
                    nav: true,
                  },
                0: {
                    gutter: 50,
                    nav: false,
                }
              },
        });
    }
    const body = document.querySelector('body'),
        accordionWrap = document.querySelectorAll('.accordion'),
        triangleEvent = document.querySelectorAll('.triangle-event'),
        languageItems = document.querySelectorAll('.header__language-item'),
        assortmentRadioBtn = document.querySelectorAll('.assortment-radio-btn'),
        catalogRadioBtn = document.querySelectorAll('.catalog-radio-btn'),
        offerTitleItems = document.querySelectorAll('.offer__title-item'),
        headerMobWrap = document.querySelector('.header__mob-wrap'),
        passwordControl = document.querySelectorAll('.password-control'),
        testimoniaDescription = document.querySelectorAll('.testimonial__description-text'),
        testimonialBtnMessage = document.querySelectorAll('.testimonial__btn-message'),
        testimonialBtnShow = document.querySelector('.testimonial__btn-show'),
        testimonialNewBtn = document.querySelector('.testimonial-new__btn'),
        inputChange = document.querySelectorAll('.input-change'),
        headerClose = document.querySelectorAll('.header__close'),
        hamburgerBtn = document.querySelector('.hamburger'),
        catalogNavItem = document.querySelectorAll('.catalog__nav-item'),
        popupInputs = document.querySelectorAll('.popup__input'),
        popupInputPlaceholder = document.querySelectorAll('.popup__input-placeholder'),
        formValidation = document.querySelectorAll('.form-validation'),
        checkoutFormValidation = document.querySelectorAll('.checkout__form-validation'),
        cartClose = document.querySelectorAll('.cart__close'),
        btnsCartRemoveProduct = document.querySelectorAll('.cart__btn-remove'),
        cartBtnOpen = document.querySelector('#cart'),
        cartPopup = document.querySelector('#cart__popup'),
        customSelects = document.querySelectorAll('.custom__select'),
        dishDescriptionBtn = document.querySelector('.dish__description-btn');

    const bannerCarousel = document.querySelector('#bannerCarousel'),
        restoransGallery = document.querySelectorAll('.restorans__gallery'),
        restoransItem = document.querySelectorAll('.restorans__item');

    const accordionCloseBtn = document.querySelectorAll('.menu__close-btn'),
        testimonialBtnsAdmin = document.querySelectorAll('.testimonial__btn-admin');

    // accordion ('.header__menu-product');
    triangleEvent.forEach(el => el.addEventListener("click", function (e) {

        let accordionWrap = this.closest('.accordion-wrap'),
            accordion = accordionWrap.querySelector('.accordion'),
            triangleIcon = accordionWrap.querySelector('.triangle-icon');

        if (windowWidth < 980 && el.classList.contains('header__menu-product')) {
            body.classList.add('overflow-hidden');
        }
        accordion.classList.toggle('active');
        triangleIcon.classList.toggle('active');
        if (accordion.classList.contains('active')) {
            slideDown(accordion, 300);
        } else {
            accordion.style.display = 'none';
        }
        e.stopPropagation();
    }));

    accordionCloseBtn.forEach(el => el.addEventListener("click", accordionClose));
    accordionCloseBtn.forEach(el => el.addEventListener("touchmove", accordionClose));


    function accordionClose(event) {
        let accordionWrap = event.target.closest('.accordion-wrap'),
            accordion = accordionWrap.querySelector('.accordion'),
            triangleIcon = accordionWrap.querySelector('.triangle-icon');

        body.classList.remove('overflow-hidden');

        accordion.classList.remove('active');
        triangleIcon.classList.remove('active');

        accordion.style.display = 'none';
    };

    if(popupInputs.length > 0){
        popupInputs.forEach(el => {
            if(el.value !== '') {
                el.closest('.popup__input-box').classList.add('val');
            }
        })
    }


    testimonialBtnsAdmin.forEach(el => el.addEventListener("click", function (e) {
        let parent = el.closest('.testimonial__item'),
            massageAdmin = parent.querySelector('.testimonial__massage-admin');

        el.classList.toggle('active');
        massageAdmin.classList.toggle('active');
        if (massageAdmin.classList.contains('active')) {
            slideDown(massageAdmin, 300);
        } else {
            massageAdmin.style.display = 'none';
        }
    }));


    if (!!restoransGallery.length) {
        restoransItem.forEach(el => {
            let gallery = el.querySelector('.restorans__gallery');
            if (!gallery) return
            let displayIndex = el.querySelector('.display-index'),
                displayLength = el.querySelector('.display-length'),
                lengthGallery = el.querySelector('.restorans__gallery').querySelectorAll('img').length;

            displayIndex.innerHTML = `1`;
            displayLength.innerHTML = `${lengthGallery}`;


            let galleryImg = gallery.querySelectorAll('img');

            galleryImg.forEach(item => {
                let wrapper = document.createElement('a');
                let anchor = item.getAttribute('src');

                wrapper.setAttribute("href", `${anchor}`);
                wrapper.setAttribute("aria-label", `image`);
                wrapper.appendChild(item);

                gallery.appendChild(wrapper);
            })
        })

        const arrayTns = {}
        for (var i = 1; i <= restoransGallery.length; i++) {
            arrayTns[`tns${i}`] = i
        }

        restoransGallery.forEach((el, index) => {
            let elementId = el.getAttribute('id');


            arrayTns[index] = tns({
                container: `#${elementId}`,
                items: 1,
                loop: false,
                lazyload: true,
                lazyloadSelector: ".tns-lazy",
                autoWidth: true,
                prevButton: `.prev-${elementId}`,
                nextButton: `.next-${elementId}`
            });

            lightGallery(document.getElementById(`restorans__gallery${index + 1}`), {
                thumbnail: true,
                animateThumb: false,
                showThumbByDefault: false
            });
        });


        document.querySelectorAll('.galleryButton').forEach(el => el.addEventListener('click', function (e) {
            let indexTns = el.closest('.restorans__item').querySelector('.restorans__gallery').getAttribute('id').slice(-1),
                info = arrayTns[Number(indexTns - 1)].getInfo(),
                indexCurrent = info.index,
                parent = el.closest('.restorans__item'),
                displayIndex = parent.querySelector('.display-index'),
                indexGallery;

            if (el.getAttribute('data-control') === "prev") {
                indexGallery = indexCurrent + 1

                displayIndex.innerHTML = indexGallery;
            }
            if (el.getAttribute('data-control') === "next") {
                indexGallery = indexCurrent + 1

                displayIndex.innerHTML = indexGallery;
            }

        }));
    }


    if (!!bannerCarousel) {
        tns({
            container: '#bannerCarousel',
            items: 1,
            slideBy: 'page',
            autoplay: true,
            mouseDrag: true,
            controls: false,
            autoplayButtonOutput: false,
            preventScrollOnTouch: 'auto',
            responsive: {
                769: {
                    gutter: 100,
                    nav: true,
                },
                0: {
                    gutter: 50,
                    nav: false,
                }
            },
        });

    }



    let w = window,
        d = document,
        e = d.documentElement,
        g = d.getElementsByTagName('body')[0],
        windowWidth = w.innerWidth || e.clientWidth || g.clientWidth,
        windowHeight = w.innerHeight || e.clientHeight || g.clientHeight;


    let oldpopupInputBox, oldpopupInput;

    reloadFile();


    /* SLIDE UP */
    let slideUp = (target, duration = 500) => {

        target.style.transitionProperty = 'height, margin, padding';
        target.style.transitionDuration = duration + 'ms';
        target.style.boxSizing = 'border-box';
        target.style.height = target.offsetHeight + 'px';
        target.offsetHeight;
        target.style.overflow = 'hidden';
        target.style.height = 0;
        target.style.paddingTop = 0;
        target.style.paddingBottom = 0;
        target.style.marginTop = 0;
        target.style.marginBottom = 0;
        window.setTimeout(() => {
            target.style.display = 'none';
            target.style.removeProperty('height');
            target.style.removeProperty('padding-top');
            target.style.removeProperty('padding-bottom');
            target.style.removeProperty('margin-top');
            target.style.removeProperty('margin-bottom');
            target.style.removeProperty('overflow');
            target.style.removeProperty('transition-duration');
            target.style.removeProperty('transition-property');
        }, duration);
    }

    /* SLIDE DOWN */
    let slideDown = (target, duration = 500) => {

        target.style.removeProperty('display');
        let display = window.getComputedStyle(target).display;
        if (display === 'none') display = 'block';
        target.style.display = display;
        let height = target.offsetHeight;
        target.style.overflow = 'hidden';
        target.style.height = 0;
        target.style.paddingTop = 0;
        target.style.paddingBottom = 0;
        target.style.marginTop = 0;
        target.style.marginBottom = 0;
        target.offsetHeight;
        target.style.boxSizing = 'border-box';
        target.style.transitionProperty = "height, margin, padding";
        target.style.transitionDuration = duration + 'ms';
        target.style.height = height + 'px';
        target.style.removeProperty('padding-top');
        target.style.removeProperty('padding-bottom');
        target.style.removeProperty('margin-top');
        target.style.removeProperty('margin-bottom');
        window.setTimeout(() => {
            target.style.removeProperty('height');
            target.style.removeProperty('overflow');
            target.style.removeProperty('transition-duration');
            target.style.removeProperty('transition-property');
        }, duration);
    }

    /* TOOGLE */
    var slideToggle = (target, duration = 500) => {
        if (window.getComputedStyle(target).display === 'none') {
            return slideDown(target, duration);
        } else {
            return slideUp(target, duration);
        }
    }


    // slideUp(document.getElementById("target"), 1000);

    // slideDown(document.getElementById("target"), 1000);

    // slideToggle(document.getElementById("target"), 1000);


    function reloadFile() {
        windowWidth = w.innerWidth || e.clientWidth || g.clientWidth;
        windowHeight = w.innerHeight || e.clientHeight || g.clientHeight;

        let vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);

        let hh = document.querySelector('header').clientHeight;
        document.documentElement.style.setProperty('--hh', `${hh}px`);

        let hch = document.querySelector('header').querySelector('.container').clientHeight;
        document.documentElement.style.setProperty('--hch', `${hch}px`);

        let fh = document.querySelector('footer').clientHeight;
        document.documentElement.style.setProperty('--fh', `${fh}px`);

        let assortmentWrapTitle = document.querySelector(".assortment__wrap-title");
        if (!!assortmentWrapTitle) {
            let assortmentWrapMarginRight = parseInt(getComputedStyle(assortmentWrapTitle, true).marginRight);
            let awt = assortmentWrapTitle.offsetWidth + assortmentWrapMarginRight;
            document.documentElement.style.setProperty('--awt', `${awt}px`);
        }


        // width scroll-bar
        let div = document.createElement('div');
        div.style.overflowY = 'scroll';
        div.style.width = '50px';
        div.style.height = '50px';
        document.body.append(div);
        let sw = div.offsetWidth - div.clientWidth;
        div.remove();
        document.documentElement.style.setProperty('--sw', `${sw}px`);




        let recommendList = document.querySelector('#recommend__list');
        if (windowWidth <= 600 && !!recommendList) {
            recommendList.classList.remove('dragscroll');
        }

        document.querySelector('.header').classList.remove('fix', 'out');
        document.querySelector('.header__nav-wrap').classList.remove('fix', 'out');
        let headerNavWrap = document.querySelector('.header__nav-wrap'),
            headerNavWrapTop = 95,
            header = document.querySelector('.header'),
            headerTop = 0,
            scrollPrev = 0;
        window.addEventListener('scroll', function (e) {

            if (windowWidth > 768) {
                header.classList.remove('fix', 'out');

                headerFixed(headerNavWrapTop, headerNavWrap);
            } else {
                headerNavWrap.classList.remove('fix', 'out');

                headerFixed(headerTop, header);
            }
        })
        function headerFixed(top, elem) {
            let scrolled = window.scrollY;

            if (top < scrolled) {
                elem.classList.add('fix');
            } else {
                elem.classList.remove('fix');
            }
            if (scrolled > 300 && scrolled > scrollPrev) {
                elem.classList.add('out');
            } else {
                elem.classList.remove('out');
            }
            scrollPrev = scrolled;
        }
    }




    let vacanciesInputFile = document.querySelector('#vacancies__input-file');

    if (!!vacanciesInputFile) {
        vacanciesInputFile.addEventListener("change", function (e) {
            document.querySelector('.vacancies__input-file-title').innerHTML = this.files[0].name;
            document.querySelector('.vacancies__btn-upload').style.display = 'flex';
        }, 0);
    }

    const actionItems = document.querySelectorAll('.action__item');

    if (!!actionItems) {
        actionItems.forEach(el => el.querySelector('img').classList.add('action__banner'))
    }

    const inputData = document.querySelectorAll('.input-data');
    if (!!inputData) {
        let leng = document.querySelector('html').getAttribute('lang');
        let language;
        let hour = new Date().getHours();
        let minute = new Date().getMinutes();
        let count = 0;

        if(leng = "ru"){
            language = Russian;
        } else if (leng = "uk") {
            language = Ukrainian;
        } else if (leng = "en-us") {
            language = English;
        }
        
        if(hour > 20 && minute > 0){
            count = 1;
        }
        flatpickr('.input-data', {
            minDate: new Date().fp_incr(count),
            minTime: "10:00",
            maxTime: "21:00",
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            disableMobile: "true",
            "locale": language  // change locale  "locale": Ukrainian   "locale": English
        });
    }


    const inputBirthday = document.querySelectorAll('.input-birthday');
    if(!!inputBirthday){
        flatpickr('.input-birthday',{
            maxDate: new Date(),
            dateFormat: "Y-m-d",
            disableMobile: "true",
            "locale": Russian  // change locale  "locale": Ukrainian   "locale": English
        });
    }

    const bonusesWrap = document.querySelector('.bonuses__wrap');
    if(!!bonusesWrap) {
        const bonusesTabs = bonusesWrap.querySelectorAll('.bonuses__tabs-item');
        const bonusesSection = bonusesWrap.querySelectorAll('.bonuses__section');
        let indexTab;
        
        bonusesTabs.forEach((el, index) => {
            el.addEventListener('click', function(e){
                let bonusesTabActive = bonusesWrap.querySelector('.bonuses__tabs-item.active');
                let bonusesSectionActive = bonusesWrap.querySelector('.bonuses__section.active');
                e.preventDefault();
                if(this.classList.contains('active')) return;
                bonusesTabActive.classList.remove('active');
                bonusesSectionActive.classList.remove('active');
                indexTab = index;
                this.classList.add('active');

                bonusesSection.forEach((el, index) => {
                    if(indexTab === index) {
                        el.classList.add('active');
                    }
                })
            })
        })
    }

    // let radioLevel1 = document.querySelectorAll('.radio');
    // if (!!radioLevel1) {
    //     radioLevel1.forEach(el => el.addEventListener("click", function (event) {
    //         let radioLevel2 = el.querySelector('.radio-level-2');

    //         let inputRadio = el.querySelector('.custom-radio').getAttribute('name');
    //         if (!!radioLevel2 && !!radioLevel2.classList.contains('show')) return;

    //         document.querySelectorAll(`[name=${inputRadio}`).forEach(el => {
    //             if (!el.closest('.radio').querySelector('.radio-level-2')) return
    //             el.closest('.radio').querySelector('.radio-level-2').style.display = 'none';
    //             el.closest('.radio').querySelector('.radio-level-2').classList.remove('show')
    //         });

    //         if (!radioLevel2) return
    //         radioLevel2.classList.add('show')
    //         slideDown(radioLevel2, 300);
    //     }));
    // }


    // let btnPlay = document.querySelector('.preview__btn-play');

    // if (!!btnPlay) {
    //     btnPlay.addEventListener("click", function () {
    //         let video = this.closest('.preview__video-wrap').querySelector('.preview__video'),
    //             checkedPlay = this.classList.contains('play');
    //         if (!checkedPlay) {
    //             video.play();
    //             this.classList.add('play');
    //         } else {
    //             video.pause();
    //             this.classList.remove('play');
    //         }
    //     });
    // }

    if (!!document.querySelector('.testimonial__container-dish')) {
        let counterTestimonial = document.querySelector('.testimonial__container-dish').querySelectorAll('.testimonial__item').length;

        document.querySelectorAll('.counter-dynamic').forEach(el => {
            el.innerHTML = `(${counterTestimonial})`;
        })
    }

    //click outside element
    document.addEventListener("click", function (event) {
        if (event.target.closest('.accordion-wrap') === null) {
            accordionWrap.forEach(el => {
                el.classList.remove('active');
                el.closest('.accordion-wrap').querySelector('.accordion').style.display = 'none'
            });
            document.querySelectorAll('.triangle-icon').forEach(el => el.classList.remove('active'));
            event.stopPropagation();
        }
        if (!!oldpopupInput && !oldpopupInput.value && event.target.closest('.popup__input-box') === null) {
            oldpopupInputBox.classList.remove('val');
        }
        if (event.target.closest('.select__nav') === null) {
            document.querySelectorAll('.select__nav').forEach(el => el.classList.remove('open'));
        }
    });

    if (!!languageItems) {
        languageItems.forEach(el => el.addEventListener("click", function () {
            languageItems.forEach(el => el.classList.remove('active'));
            this.classList.add('active');
        }));
    }

    hamburgerBtn.addEventListener("click", function () {
        document.querySelector('.header__mob-wrap').classList.add('active');
        body.classList.add('overflow-hidden');
    });

    if (!!cartBtnOpen) {
        cartBtnOpen.addEventListener('click', function () {
            cartPopup.classList.add('open');
            body.classList.add('overflow-hidden');
        });

        cartClose.forEach(el => el.addEventListener('click', function () {
            cartPopup.classList.remove('open');
            body.classList.remove('overflow-hidden');
        }));
    }



    if (!!dishDescriptionBtn) {
        dishDescriptionBtn.addEventListener("click", function () {
            this.classList.toggle('active');
            this.closest('.dish__description-text').querySelector('.dish__description-scroll').classList.toggle('active');

            if (this.dataset.open === this.innerHTML) {
                this.innerHTML = this.dataset.close;
                return
            }
            if (this.dataset.close === this.innerHTML) {
                this.innerHTML = this.dataset.open;
            }
        });
    }




    // selectTitleBox.forEach(el => el.addEventListener("click", function () {
    //     let parent = el.closest('.select__nav');

    //     parent.classList.toggle('open');
    // }));

    // selectItem.forEach(el => el.addEventListener("click", function () {
    //     let parent = el.closest('.select__nav'),
    //         title = parent.querySelector('.select__title'),
    //         valueTitle = el.innerHTML;
    //     title.innerHTML = valueTitle;
    //     title.classList.add('active');
    //     if (title.classList.contains('active')) {
    //         title.closest('.select__nav').classList.remove('error');
    //     } else {
    //         title.closest('.select__nav').classList.add('error');
    //     }
    //     parent.classList.toggle('open');
    // }));


    // let checkoutCartMob = document.querySelector('.checkout__cart-mob');
    // if (!!checkoutCartMob) {
    //     checkoutCartMob.addEventListener("click", function () {
    //         let parent = this.closest('.table-responsive'),
    //             listProduct = parent.querySelector('.simplecheckout-cart'),
    //             checkoutBtnTitle = parent.querySelector('.checkout__btn-title'),
    //             accomanying = parent.querySelector('.accompanying__list'),
    //             checkbox = this.classList.contains('active'),
    //             dataOpen = checkoutBtnTitle.getAttribute('data-open'),
    //             dataClose = checkoutBtnTitle.getAttribute('data-close');
    //
    //
    //         if (!checkbox) {
    //             checkoutBtnTitle.innerHTML = dataClose;
    //         } else {
    //             checkoutBtnTitle.innerHTML = dataOpen;
    //         }
    //
    //         // this.classList.toggle('active');
    //         // listProduct.classList.toggle('active');
    //         // accomanying.classList.toggle('active');
    //     });
    // }

    let linksDownload = document.querySelectorAll('a[download]');
    if (!!linksDownload) {
        linksDownload.forEach(el => el.addEventListener('click', function (e) {
            e.stopPropagation();
        }));
    }

    if (!!formValidation) {

        popupInputPlaceholder.forEach(el => el.onclick = function (event) {
            let parent = el.closest('.popup__input-box');

            if (!!parent.classList.contains('val')) return;

            parent.querySelector('.popup__input').click();
        });


        // popupLogIn()
        // popupRegistration()
        popupRecoverPassword()
        popupMail()
        popupVacancies();
        popupCatering();
        popupRestorans();
    }



    if (!!headerClose) {
        headerClose.forEach(el => el.addEventListener("click", function () {
            languageItems.forEach(el => el.classList.remove('active'));
            headerMobWrap.classList.remove('active');
            body.classList.remove('overflow-hidden');
        }));
    }

    if (!!assortmentRadioBtn) {
        assortmentRadioBtn.forEach(el => el.addEventListener("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            assortmentRadioBtn.forEach(el => {
                el.classList.remove('active')
            });
            this.classList.add('active');


            let anchor = this.querySelector('a').getAttribute('href'),
                assortmentList = document.querySelector(`${anchor}`),
                wrapLists = document.querySelector('.assortment__list');

            wrapLists.querySelectorAll('.product__list').forEach(el => {
                el.classList.remove('active');
                el.classList.add('disable');
            })
            wrapLists.querySelectorAll('.product__btn-more').forEach(el => {
                el.classList.remove('disable');
                el.classList.add('active');
            })

            assortmentList.classList.add('active');
        }));
    }

    if (!!btnsCartRemoveProduct) {
        btnsCartRemoveProduct.forEach(el => el.addEventListener("click", function () {
            let parent = el.closest('.cart__item');
            parent.remove();
        }));
    }


    if (!!catalogRadioBtn) {
        catalogRadioBtn.forEach(el => el.addEventListener("click", function () {
            catalogRadioBtn.forEach(el => el.classList.remove('active'));
            this.classList.add('active');
        }));
    }

    if (!!offerTitleItems) {
        offerTitleItems.forEach(el => el.addEventListener("click", function () {
            // if(el.classList.contains('active')) return
            let itemData = el.dataset.tab;

            offerTitleItems.forEach(el => el.classList.remove('active'));
            el.classList.add('active');
            document.querySelectorAll('.offer__list').forEach(el => el.classList.remove('active'));
            document.querySelector(`#${itemData}`).classList.add('active');
        }));
    }


    if (!!catalogNavItem) {
        catalogNavItem.forEach(el => el.addEventListener("click", function () {
            catalogNavItem.forEach(el => el.classList.remove('active'));
            this.classList.add('active');
        }));
    }

document.addEventListener('click', function(event){
    let target = event.target;

        if(target.classList.contains('phone')) {
            IMask(
                target, {
                mask: '+{38}(000)000-00-00'
            });
        }

        // if(target.classList.contains('password-control')) {
        //     let parent = target.closest('.password'),
        //     passwordInput = parent.querySelector('.password-input');
        //
        //     if (passwordInput.getAttribute('type') == 'password') {
        //         target.classList.add('view');
        //         passwordInput.setAttribute('type', 'text');
        //     } else {
        //         target.classList.remove('view');
        //         passwordInput.setAttribute('type', 'password');
        //     }
        //     return false;
        // }

        if(target.classList.contains('popup__input') || target.classList.contains('popup__input-placeholder')) {
            let parent = target.closest('.popup__input-box'),
                input = parent.querySelector('.popup__input');

            if (!!oldpopupInput && !oldpopupInput.value) {
                oldpopupInputBox.classList.remove('val');
            }
    
            parent.classList.add('val');
    
            oldpopupInput = input;
            oldpopupInputBox = parent;
        }

        if(target.closest('.select__title-box')) {
            let parent = target.closest('.select__nav');
            parent.classList.toggle('open');
        }

        if(target.classList.contains('select__nav-item')) {
            let parent = target.closest('.select__nav'),
            title = parent.querySelector('.select__title'),
            valueTitle = target.innerHTML;

            title.innerHTML = valueTitle;
            title.classList.add('active');

            if (title.classList.contains('active')) {
                title.closest('.select__nav').classList.remove('error');
            } else {
                title.closest('.select__nav').classList.add('error');
            }
            parent.classList.remove('open');
        }
    })

    document.addEventListener('input', function(event){
        let target = event.target;

        if(target.classList.contains('popup__input')) {
            document.querySelectorAll('.popup__input').forEach(el => {
                if(el.value !== '') {
					el.closest('.popup__input-box').classList.add('val');
				}
            })
        }

        if(target.getAttribute('name') === "password") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternPassword, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternPassword, 'checkout__input-box');
            }
        }

        if(target.getAttribute('name') === "password2") {
            if (target.closest('.popup__input-box')) {
                let password = target.closest('form').querySelector('input[name="password"]')
                checkValidatePassword2(password, target, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                let password = target.closest('form').querySelector('input[name="password"]')
                checkValidatePassword2(password, target, 'checkout__input-box');
            }
        }

        if(target.getAttribute('name') === "email") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternEmail, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternEmail, 'checkout__input-box');
            }
        }

        if(target.getAttribute('name') === "phone") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternPhone, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternPhone, 'checkout__input-box');
            }
        }

        if(target.getAttribute('name') === "firstname" || target.getAttribute('name') === "surname") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternName, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternName, 'checkout__input-box');
            }
        }

        if(target.getAttribute('name') === "number") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternNumber, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternNumber, 'checkout__input-box');
            }
            
            if (target.value.length > 5) {
                target.value = target.value.slice(0, 5);
            }
        }

        if(target.getAttribute('name') === "file") {
            checkValidateFile(target, patternFile);
        }

        if(target.getAttribute('name') === "date") {
            checkValidateFile(target, patternDate);
        }

        if(target.tagName === "TEXTAREA") {
            if (target.closest('.popup__input-box')) {
                checkValidate(target, patternText, 'popup__input-box');
            }
            if (target.closest('.checkout__input-box')) {
                checkValidate(target, patternText, 'checkout__input-box');
            }
        }
    })

    if (!!inputChange) {
        inputChange.forEach(el => el.addEventListener("click", function () {
            let parent = el.closest('.input-box'),
                amount = parent.querySelector('.amount'),
                valueMin = amount.dataset.valueMin,
                inputFirst = parent.querySelector('.input-change:nth-child(1)');

            if(typeof valueMin == "undefined") {
                valueMin = 1;
            }

            if (this.value === '+') {
                amount.value = +amount.value + 1;
            } else if (this.value === '−' && amount.value > +valueMin) { // '-' - unicode &#8722
                amount.value = +amount.value - 1;
                if (+amount.value == +valueMin) {
                    inputFirst.setAttribute('disabled', 'true');
                }
            }
            if (+amount.value > +valueMin) {
                inputFirst.removeAttribute('disabled');
            }
        }));
    }

    if (windowWidth <= 768) {
        if (!!testimonialBtnShow) {
            testimonialBtnShow.addEventListener("click", function (e) {
                if (this.getAttribute('type') === 'submit') return
                e.preventDefault();
                let dataValue = this.getAttribute('data-submit');
                this.setAttribute('type', 'submit');
                this.setAttribute('value', `${dataValue}`);
                this.classList.remove('testimonial__btn-show');

                slideDown(this.closest('.testimonial__new').querySelector('.testimonial__new-hide'), 300);

                setTimeout(scrollBottom, 300);
            });
        }

    }

    if (!!document.querySelector('.testimonial__item a')) {
        testimoniaDescription.forEach(el => {
            if (el.scrollHeight === el.clientHeight) {
                el.closest('.testimonial__item').querySelector('.testimonial__btn-message').style.display = 'none'
            }
        });
    }

    if (!!document.querySelector('.offer__title-item-first')) {
        //triger click first offer
        document.querySelector('.offer__title-item-first').click();
    }


    function scrollBottom() {
        let scrollHeight = Math.max(
            document.body.scrollHeight, document.documentElement.scrollHeight,
            document.body.offsetHeight, document.documentElement.offsetHeight,
            document.body.clientHeight, document.documentElement.clientHeight
        )
        window.scrollTo({ top: scrollHeight, behavior: 'smooth' });
    }


    if (!!checkoutFormValidation) {
        checkoutFormValidation.forEach(el => el.addEventListener("submit", function (event) {
            event.preventDefault();

        }));
    }




    //reload File js
    var oldWidth = window.innerWidth;
    window.onresize = function () {
        var newWidth = window.innerWidth;
        if (newWidth != oldWidth) {
            reloadFile()
            oldWidth = newWidth;
        }
    };

    const popupWrap = document.querySelector('.popup__wrap'),
        popupBtn = document.querySelectorAll('.popup__btn'),
        popupContainerAll = document.querySelectorAll('.popup__container'),
        popupBtnClose = document.querySelectorAll('.popup-close'),
        cartInfo = document.querySelectorAll('.cart__info'),
        cartInfoCloseBtn = document.querySelectorAll('.cart__info-close');  

    popupBtn.forEach(el => el.addEventListener("click", function () {
        let popupClass = this.dataset.popup;
        let popupContainer = document.querySelector(`.${popupClass}`);

        popupWrap.classList.remove('active');
        popupContainerAll.forEach(el => el.classList.remove('active'));

        body.classList.add('overflow-hidden');
        popupWrap.classList.add('active');
        popupContainer.classList.add('active');
    }));

    popupBtnClose.forEach(el => el.addEventListener("click", function () {

        body.classList.remove('overflow-hidden');
        popupWrap.classList.remove('active');
        popupContainerAll.forEach(el => el.classList.remove('active'));
    }));

    // if (windowWidth <= 600) {
    //
    //     if (!!cartInfo) {
    //         cartInfo.forEach(el => el.addEventListener("click", function () {
    //             let parent = this.closest('.cart__info-wrap');
    //             parent.classList.add('active');
    //         }));
    //
    //         cartInfoCloseBtn.forEach(el => el.addEventListener("click", function (event) {
    //             event.stopPropagation()
    //             let parent = this.closest('.cart__info-wrap');
    //             parent.classList.remove('active');
    //         }));
    //     }
    //
    // }
    let anchors = document.querySelectorAll('a.scroll-to');

    anchors.forEach(el => el.addEventListener("click", function (e) {
        e.preventDefault();

        const blockID = el.getAttribute('href');
        if (blockID === null) return

        document.querySelector(blockID).scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        })
        let btnPlay = document.querySelector('.preview__btn-play');
        if (blockID == '#previewWrap') {
            btnPlay.click();
        }
    }));

    const preview = document.querySelector(".preview__wrap");

    if (!!preview) {

        const previewObserver = new IntersectionObserver((entries, previewe) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const item = entry.target;
                    let t1 = new TimelineMax();

                    t1.from(
                        item.querySelector(".preview__img"),
                        1,
                        {
                            y: "+20%",
                            opacity: 0,
                            ease: Expo.easeOut,
                        },
                        "=+0.5",
                    );

                    t1.from(
                        item.querySelector(".preview__video-wrap"),
                        1,
                        {
                            y: "+20%",
                            opacity: 0,
                            ease: Expo.easeOut,
                        },
                        "=-0.5",
                    );

                    previewe.unobserve(item);
                }
            });
        });

        previewObserver.observe(preview);
    }

    const testimonial = document.querySelector(".testimonial__wrap");


    if (!!testimonial) {
        const testimonialObserver = new IntersectionObserver((entries, testimoniale) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const item = entry.target;
                    let t1 = new TimelineMax();

                    t1.staggerFrom(
                        item.querySelectorAll(".testimonial__item"),
                        3,
                        {
                            cycle: {
                                x: function (index) {
                                    if (index % 2 === 0) {
                                        return "-20%";
                                    } else {
                                        return "+20%";
                                    }
                                },
                            },
                            opacity: 0,
                            ease: Expo.easeOut,
                        },
                        0.5,
                        "=-1",
                    );

                    testimoniale.unobserve(item);
                }
            });
        });

        testimonialObserver.observe(testimonial);
    }

    const shops = document.querySelector(".shops__wrap");

    if (!!shops) {

        const shopsObserver = new IntersectionObserver((entries, shopse) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const item = entry.target;
                    let t1 = new TimelineMax();

                    t1.staggerFrom(
                        item.querySelectorAll(".shops__item"),
                        3,
                        {
                            cycle: {
                                x: function (index) {
                                    if (index % 2 === 0) {
                                        return "-20%";
                                    } else {
                                        return "+20%";
                                    }
                                },
                            },
                            opacity: 0,
                            ease: Expo.easeOut,
                        },
                        0.5,
                        "=-1",
                    );

                    shopse.unobserve(item);
                }
            });
        });

        shopsObserver.observe(shops);
    }

    const assortmentBox = document.querySelector('.assortment__input-box ');
    if (!!assortmentBox && assortmentBox.scrollWidth > assortmentBox.clientWidth) {
        assortmentBox.closest('.assortment__input-wrap').classList.add('scroll');
    }
    const catalogInputBox = document.querySelector('.catalog__input-box ul');
    if (!!catalogInputBox && catalogInputBox.scrollWidth > (window.screen.width - catalogInputBox.closest('.catalog__wrap').querySelector('.checkout__select').clientWidth)) {
        console.log(111);
        catalogInputBox.closest('.catalog__wrap').classList.add('scroll');
    }
});


function validatePopupLogIn(e) {
    let form = e.target.closest('form'),
        email = form.elements.email,
        password = form.elements.password;

        checkValidate(password, patternPassword, 'popup__input-box');
        checkValidate(email, patternEmail, 'popup__input-box');
    if (
        !!checkValidate(password, patternPassword, 'popup__input-box') &&
        !!checkValidate(email, patternEmail, 'popup__input-box')
    ) {
        return true
    } else { return false }
}

function popupRegistration(e) {
    let form = e.target.closest('form'),
        email = form.elements.email,
        password = form.elements.password,
        password2 = form.elements.password2,
        phone = form.elements.phone,
        firstname = form.elements.firstname,
        surname = form.elements.surname,
        selectTitle = form.querySelector('.select__title');

    checkValidateSelect(selectTitle);
    checkValidatePassword2(password, password2, 'popup__input-box');
    checkValidate(password, patternPassword, 'popup__input-box');
    checkValidate(email, patternEmail, 'popup__input-box');
    checkValidate(phone, patternPhone, 'popup__input-box');
    checkValidate(firstname, patternName, 'popup__input-box');
    checkValidate(surname, patternName, 'popup__input-box');

    if (
        !!checkValidateSelect(selectTitle) &&
        !!checkValidate(password, patternPassword, 'popup__input-box') &&
        !!checkValidatePassword2(password, password2, 'popup__input-box') &&
        !!checkValidate(email, patternEmail, 'popup__input-box') &&
        !!checkValidate(phone, patternPhone, 'popup__input-box') &&
        !!checkValidate(firstname, patternName, 'popup__input-box') &&
        !!checkValidate(surname, patternName, 'popup__input-box')
    ) {
        return true
    } else { return false }

}

function popupRecoverPassword() {
    let formRecoverPassword = document.querySelector('.popup__recoverPassword');

    formRecoverPassword.addEventListener('submit', function (e) {
        e.preventDefault();
        let form = e.target,
            email = form.elements.email;

        checkValidate(email, patternEmail, 'popup__input-box');
    })
}

function popupMail() {
    let formMail = document.querySelector('.popup__mail');

    formMail.addEventListener('submit', function (e) {
        e.preventDefault();
        let form = e.target,
            email = form.elements.email,
            phone = form.elements.phone,
            firstname = form.elements.firstname,
            textarea = form.querySelector('textarea');

        checkValidate(textarea, patternText, 'popup__input-box');
        checkValidate(email, patternEmail, 'popup__input-box');
        checkValidate(phone, patternPhone, 'popup__input-box');
        checkValidate(firstname, patternName, 'popup__input-box');
    })
}

function popupVacancies() {
    let formVacancies = document.querySelector('.vacancies__form');
    if (!formVacancies) return

    formVacancies.addEventListener('submit', function (e) {
        e.preventDefault();
        let form = e.target,
            phone = form.elements.phone,
            firstname = form.elements.firstname,
            file = form.elements.file,
            selectTitle = form.querySelector('.select__title');

        checkValidateSelect(selectTitle);
        checkValidate(phone, patternPhone, 'checkout__input-box');
        checkValidate(firstname, patternName, 'checkout__input-box');
        checkValidateFile(file, patternFile);
    })
}

function popupCatering() {
    let formCatering = document.querySelector('.catering__order');
    if (!formCatering) return

    formCatering.addEventListener('submit', function (e) {
        e.preventDefault();
        let form = e.target,
            phone = form.elements.phone,
            firstname = form.elements.firstname,
            date = form.elements.date,
            number = form.elements.number;


        checkValidate(phone, patternPhone, 'checkout__input-box');
        checkValidate(number, patternNumber, 'checkout__input-box');
        checkValidate(date, patternDate, 'checkout__input-box');
        checkValidate(firstname, patternName, 'checkout__input-box');
    })
}

function popupRestorans() {
    let formRestorans = document.querySelector('.popup__restorans');
    if (!formRestorans) return

    formRestorans.addEventListener('submit', function (e) {
        e.preventDefault();
        let form = e.target,
            phone = form.elements.phone,
            firstname = form.elements.firstname,
            date = form.elements.date,
            textarea = form.querySelector('textarea'),
            number = form.elements.number,
            selectTitle = form.querySelector('.select__title');

        checkValidateSelect(selectTitle);
        checkValidate(phone, patternPhone, 'popup__input-box');
        checkValidate(number, patternNumber, 'popup__input-box');
        checkValidate(firstname, patternName, 'popup__input-box');
        checkValidate(date, patternDate, 'popup__input-box');
        checkValidate(textarea, patternText, 'popup__input-box');
    })
}

function checkValidateFile(file, pattern) {
    let wrap = file.closest('.file__input-box');
    if (validate(file.value, pattern) && (file.files.length !== 0 && (file.files[0].size / 1024 / 1024) <= 25)) {
        wrap.classList.remove('error');
    } else {
        wrap.classList.add('error');
    }
}

function checkValidatePassword2(password, password2, classBox) {
    let wrap = password2.closest(`.${classBox}`)
    if (password.value === password2.value && password2.value.length !== 0) {
        wrap.classList.remove('error');
    } else {
        wrap.classList.add('error');
    }
}

function checkValidateSelect(select) {
    let wrap = select.closest('.select__nav')
    if (select.classList.contains('active')) {
        wrap.classList.remove('error');
    } else {
        wrap.classList.add('error');
    }
}

function checkValidate(input, pattern, classBox) {
    let wrap = input.closest(`.${classBox}`);
    if (validate(input.value, pattern)) {
        wrap.classList.remove('error');
        return true;
    } else {
        wrap.classList.add('error');
        return false;
    }
}

function validate(text, pattern) {
    return pattern.test(String(text).toLowerCase());
}

function updateCart(terget, product_id, key, flag) {
    var input = $('input[name=\'' + key + '\']');
    let parent = terget.closest('.cart__item');
    let wc = parent.querySelector('.cart__price-info').querySelectorAll('span')[1].innerHTML;
    let w = parent.querySelector('.cart-weight').innerHTML;
    let amount = parent.querySelector('.amount').value;
    let g = parent.querySelector('.cart-g').innerHTML;

    if(flag == '+') {
        input.val(parseFloat(input.val())+1);
        if(+(parseInt(wc) * (+amount + 1)) >= 1000) {
            w = ((+parseInt(wc) * (+amount + 1))/1000).toFixed(2);
            g = 'кг';
        } else {
            w = (+parseInt(wc) * (+amount + 1));
            g = 'г';
        }
    }
    if(flag == '-') {
        input.val(parseFloat(input.val())-1);
        if(+(parseInt(wc) * (+amount)) > 1000) {
            w = ((+parseInt(wc) * (+amount - 1))/1000).toFixed(2);
            g = 'кг';
        } else {
            w = (+parseInt(wc) * (+amount - 1));
            g = 'г';
        }
    }

    if (qnty == '') return;

    var newWeight = +w;
    console.log(newWeight);
    console.log(g);
    var qnty = parseFloat(input.val());

    $.ajax({
        type: 'post',
        data: 'quantity['+key+']='+qnty,
        url: 'index.php?route=checkout/cart/edit',
        dataType: 'html',
        success: function(data) {
            $('#popupcart_extended').load('index.php?route=extension/module/popupcart #popupcart_extended > *', function() {
                carousel();
            });
            $('#cart').load('index.php?route=common/cart/info #cart > *');
            if (!qnty) {
                restore_button(product_id);
            }
        }
    });
}
if(document.querySelector('.video')){
    function findVideos() {
        let videos = document.querySelectorAll('.video');
    
        for (let i = 0; i < videos.length; i++) {
            setupVideo(videos[i]);
        }
    }
    
    function setupVideo(video) {
        let link = video.querySelector('.video__link');
        let media = video.querySelector('.video__media');
        let button = video.querySelector('.video__button');
        let id = parseMediaURL(media);
    
        video.addEventListener('click', (e) => {
            e.target.style.display = "none";
            let iframe = createIframe(id);
    
            link.remove();
            button.remove();
            video.appendChild(iframe);
        });
    
        link.removeAttribute('href');
        video.classList.add('video--enabled');
    }
    
    function parseMediaURL(media) {
        let regexp = /\/\/img\.youtube\.com\/vi\/([a-zA-Z0-9_-]+)\/mqdefault\.jpg/i;
        let url = media.src;
        let match = url.match(regexp);
    
        return match[1];
    }
    
    function createIframe(id) {
        let iframe = document.createElement('iframe');
    
        iframe.setAttribute('allowfullscreen', '');
        iframe.setAttribute('sandbox', 'allow-forms allow-scripts allow-pointer-lock allow-same-origin allow-top-navigation');
        iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');
        iframe.setAttribute('src', generateURL(id));
        iframe.classList.add('video__media');
    
        return iframe;
    }
    
    function generateURL(id) {
        let query = '?rel=0&showinfo=0&autoplay=1';
    
        return 'https://www.youtube.com/embed/' + id + query;
    }
    
    findVideos();
}
//
// window.onscroll = function() {
//     document.getElementsByClassName('header__mob-wrap').style.top =
//         (window.pageYOffset + window.innerHeight - 25) + 'px';
// };
